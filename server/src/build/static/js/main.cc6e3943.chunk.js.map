{"version":3,"sources":["images/image.svg","Components/UploadImage/UploadImage.js","Components/Loading/Loading.js","images/green-check.png","Components/UploadedImage/UploadedImage.js","App.js","index.js"],"names":["UploadImage","props","useState","image","setImage","inputRef","useRef","handleFiles","files","file","type","startsWith","Error","sendToServer","a","formData","FormData","append","startLoading","axios","post","headers","onUploadProgress","progressEvent","updateProgressPorcent","parseInt","Math","round","loaded","total","response","data","fileName","filePath","checkImage","console","log","alert","useEffect","preview","document","body","getElementsByClassName","img","createElement","classList","add","style","position","width","height","cursor","appendChild","reader","FileReader","onload","aImg","e","src","target","result","readAsDataURL","className","onDrop","stopPropagation","preventDefault","dataTransfer","onDragOver","defaultImage","alt","onClick","current","click","display","ref","onChange","event","Loading","progressPorcent","UploadedImage","getElementById","select","greenCheck","readOnly","value","id","copyText","setSelectionRange","execCommand","App","isLoading","setIsLoading","imageIsLoaded","setImageIsLoaded","imageData","setImgData","setProgressPorcent","bool","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cc6e3943.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image.3710b8a3.svg\";","import \"./UploadImage.scss\";\r\nimport defaultImage from \"../../images/image.svg\";\r\nimport axios from \"axios\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\n\r\nexport default function UploadImage(props) {\r\n  const [image, setImage] = useState();\r\n  const inputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      const preview = document.body.getElementsByClassName(\"imageDropper\");\r\n      const img = document.createElement(\"img\");\r\n      img.classList.add(\"obj\");\r\n      img.file = image;\r\n      img.style.position = \"absolute\";\r\n      img.style.width = \"100%\";\r\n      img.style.height = \"100%\";\r\n      img.style.cursor = \"pointer\";\r\n      preview[0].appendChild(img);\r\n      const reader = new FileReader();\r\n      reader.onload = (function (aImg) {\r\n        return function (e) {\r\n          aImg.src = e.target.result;\r\n        };\r\n      })(img);\r\n      reader.readAsDataURL(image);\r\n    }\r\n  }, [image]);\r\n\r\n  function allowEvent(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  function drop(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    const dt = e.dataTransfer;\r\n    const files = dt.files;\r\n    handleFiles(files);\r\n  }\r\n\r\n  function handleFiles(files) {\r\n    const file = files[0];\r\n\r\n    if (!file.type.startsWith(\"image/\"))\r\n      throw new Error(\"No se ha subido una imagen\");\r\n\r\n    setImage(file);\r\n    sendToServer(file);\r\n  }\r\n\r\n  async function sendToServer(file) {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    try {\r\n      props.startLoading(true);\r\n      const response = await axios.post(\r\n        \"http://localhost:3001/upload\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multiplatform/form-data\",\r\n          },\r\n          onUploadProgress: (progressEvent) => {\r\n            props.updateProgressPorcent(\r\n              parseInt(\r\n                Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n              )\r\n            );\r\n          },\r\n        }\r\n      );\r\n      const { fileName, filePath } = response.data;\r\n      props.checkImage({ fileName, filePath });\r\n      props.startLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(\"Ha ocurrido un error\");\r\n      props.startLoading(false);\r\n    }\r\n  }\r\n\r\n  function onChangeInput(event) {\r\n    handleFiles(event.target.files);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"title\">\r\n        <h1>Upload your image</h1>\r\n      </div>\r\n      <div className=\"subtitle\">\r\n        <h3>File should be Jpeg, Png...</h3>\r\n      </div>\r\n      <div className=\"imageDropper\" onDrop={drop} onDragOver={allowEvent}>\r\n        <img src={defaultImage} alt=\"paisaje\"></img>\r\n        <h4>Drag & Drop your image here</h4>\r\n      </div>\r\n      <div className=\"or\">\r\n        <h3>Or</h3>\r\n      </div>\r\n      <button onClick={() => inputRef.current.click()}>Choose a file</button>\r\n      <input\r\n        type=\"file\"\r\n        style={{ display: \"none\" }}\r\n        ref={inputRef}\r\n        onChange={onChangeInput}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import \"./Loading.scss\";\r\nexport default function Loading(props) {\r\n  console.log(props.progressPorcent);\r\n  return (\r\n    <div className=\"loadingCard\">\r\n      <h1>Uploading...</h1>\r\n      <div className=\"uploadBar\">\r\n        <div className=\"progressBar\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/green-check.cb16bbbb.png\";","import \"./UploadedImage.scss\";\r\nimport greenCheck from \"../../images/green-check.png\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function UploadedImage(props) {\r\n  useEffect(() => {\r\n    document.getElementById(\"link\").select();\r\n  }, []);\r\n  function copiarTexto() {\r\n    var copyText = document.getElementById(\"link\");\r\n    copyText.select();\r\n    copyText.setSelectionRange(0, 99999);\r\n    document.execCommand(\"copy\");\r\n  }\r\n\r\n  function seleccionarTexto() {\r\n    var copyText = document.getElementById(\"link\");\r\n    copyText.select();\r\n    copyText.setSelectionRange(0, 99999);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={greenCheck} className=\"greenCheck\" alt=\"greenCheck\" />\r\n      <div className=\"container\">\r\n        <h2 className=\"title\">Uploaded Successesfully!</h2>\r\n      </div>\r\n      <img\r\n        className=\"mainImage\"\r\n        src={props.data.filePath}\r\n        alt={props.data.fileName}\r\n      />\r\n      <div className=\"imageLink\">\r\n        <input\r\n          type=\"text\"\r\n          readOnly={true}\r\n          value={props.data.filePath}\r\n          id=\"link\"\r\n          onClick={seleccionarTexto}\r\n        />\r\n        <button onClick={copiarTexto}>Copy link</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import UploadImage from \"./Components/UploadImage/UploadImage\";\nimport Loading from \"./Components/Loading/Loading\";\nimport UploadedImage from \"./Components/UploadedImage/UploadedImage\";\nimport \"./App.scss\";\nimport { useState } from \"react\";\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [imageIsLoaded, setImageIsLoaded] = useState(false);\n  const [imageData, setImgData] = useState(\"\");\n  const [progressPorcent, setProgressPorcent] = useState(0);\n\n  function checkImage(data) {\n    setImageIsLoaded(true);\n    setImgData(data);\n  }\n  function startLoading(bool) {\n    setIsLoading(bool);\n  }\n  function updateProgressPorcent(value) {\n    setProgressPorcent(value);\n  }\n\n  return (\n    <div className=\"main\">\n      {isLoading ? (\n        <Loading progressPorcent={progressPorcent} />\n      ) : !imageIsLoaded ? (\n        <UploadImage\n          checkImage={checkImage}\n          startLoading={startLoading}\n          updateProgressPorcent={updateProgressPorcent}\n        />\n      ) : (\n        <UploadedImage data={imageData} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}